# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
cn-powernukkitx-libdeflate-java = "0.0.2-PNX"
cn-powernukkitx-terra-binary = "6.4.3"
fastreflection = "8733a599fa"
com-github-oshi-oshi-core = "6.4.10"
com-google-code-findbugs-jsr305 = "3.0.2"
com-google-code-gson-gson = "2.10.1"
com-google-guava-guava = "33.0.0-jre"
commons-io-commons-io = "2.15.1"
io-netty-netty-transport-classes-epoll = "4.1.101.Final"
io-netty-netty-transport-classes-kqueue = "4.1.101.Final"
io-sentry-sentry = "7.1.0"
io-sentry-sentry-log4j2 = "7.1.0"
it-unimi-dsi-fastutil = "8.5.12"
leveldb = "1.0.1"
net-minecrell-terminalconsoleappender = "1.3.0"
net-sf-jopt-simple-jopt-simple = "5.0.4"
log4j = "2.23.1"
org-bitbucket-b-c-jose4j = "0.9.4"
org-cloudburstmc-netty-netty-transport-raknet = "1.0.0.CR3-SNAPSHOT"
graalvm-version = "23.1.3"
org-jetbrains-annotations = "24.1.0"
org-jline-jline-reader = "3.25.0"
org-jline-jline-terminal = "3.25.0"
org-jline-jline-terminal-jna = "3.25.0"
org-junit-jupiter-junit-jupiter = "5.10.1"
org-lz4-lz4-java = "1.8.0"
org-mockito-mockito-junit-jupiter = "5.8.0"
org-openjdk-jmh-jmh-core = "1.37"
org-openjdk-jmh-jmh-generator-annprocess = "1.37"
org-ow2-asm-asm = "9.7"
org-projectlombok-lombok = "1.18.30"
org-xerial-snappy-snappy-java = "1.1.10.5"
org-yaml-snakeyaml = "2.2"
commons-lang3 = "3.14.0"
commons-rng = "1.5"
com-github-stateless4j = "2.6.0"
eu-okaeri-core = "c995d17b6e"
disruptor = "4.0.0"

[libraries]
libdeflate = { module = "cn.powernukkitx:libdeflate-java", version.ref = "cn-powernukkitx-libdeflate-java" }
terra = { module = "com.github.PowerNukkitX:Terra-Binary", version.ref = "cn-powernukkitx-terra-binary" }
fastreflection = { module = "com.github.AllayMC:fast-reflection", version.ref = "fastreflection" }
oshi = { module = "com.github.oshi:oshi-core", version.ref = "com-github-oshi-oshi-core" }
jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "com-google-code-findbugs-jsr305" }
gson = { module = "com.google.code.gson:gson", version.ref = "com-google-code-gson-gson" }
guava = { module = "com.google.guava:guava", version.ref = "com-google-guava-guava" }
disruptor = { module = "com.lmax:disruptor", version.ref = "disruptor" }
commonsio = { module = "commons-io:commons-io", version.ref = "commons-io-commons-io" }
commonslang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
sentry = { module = "io.sentry:sentry", version.ref = "io-sentry-sentry" }
sentry-log4j2 = { module = "io.sentry:sentry-log4j2", version.ref = "io-sentry-sentry-log4j2" }
fastutil = { module = "it.unimi.dsi:fastutil", version.ref = "it-unimi-dsi-fastutil" }
leveldb = { group = "com.hivemc.leveldb", name = "leveldb", version.ref = "leveldb" }
leveldb-api = { group = "com.hivemc.leveldb", name = "leveldb-api", version.ref = "leveldb" }
annotations = { module = "org.jetbrains:annotations", version.ref = "org-jetbrains-annotations" }
asm = { module = "org.ow2.asm:asm", version.ref = "org-ow2-asm-asm" }
lombok = { module = "org.projectlombok:lombok", version.ref = "org-projectlombok-lombok" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "org-yaml-snakeyaml" }
stateless4j = { module = "com.github.stateless4j:stateless4j", version.ref = "com-github-stateless4j" }
# Command-line parser
joptsimple = { module = "net.sf.jopt-simple:jopt-simple", version.ref = "net-sf-jopt-simple-jopt-simple" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-slf4j2-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
jose4j = { module = "org.bitbucket.b_c:jose4j", version.ref = "org-bitbucket-b-c-jose4j" }
netty-epoll = { module = "io.netty:netty-transport-classes-epoll", version.ref = "io-netty-netty-transport-classes-epoll" }
netty-kqueue = { module = "io.netty:netty-transport-classes-kqueue", version.ref = "io-netty-netty-transport-classes-kqueue" }
netty-raknet = { module = "org.cloudburstmc.netty:netty-transport-raknet", version.ref = "org-cloudburstmc-netty-netty-transport-raknet" }
graalvm-polyglot = { module = "org.graalvm.polyglot:polyglot", version.ref = "graalvm-version" }
graalvm-js = { module = "org.graalvm.js:js-language", version.ref = "graalvm-version" }
graalvm-truffle = { module = "org.graalvm.truffle:truffle-runtime", version.ref = "graalvm-version" }
terminalconsoleappender = { module = "net.minecrell:terminalconsoleappender", version.ref = "net-minecrell-terminalconsoleappender" }
jline-reader = { module = "org.jline:jline-reader", version.ref = "org-jline-jline-reader" }
jline-terminal = { module = "org.jline:jline-terminal", version.ref = "org-jline-jline-terminal" }
jline-terminaljna = { module = "org.jline:jline-terminal-jna", version.ref = "org-jline-jline-terminal-jna" }
junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "org-junit-jupiter-junit-jupiter" }
lz4 = { module = "org.lz4:lz4-java", version.ref = "org-lz4-lz4-java" }
mockito = { module = "org.mockito:mockito-junit-jupiter", version.ref = "org-mockito-mockito-junit-jupiter" }
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "org-openjdk-jmh-jmh-core" }
jmh-generator = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "org-openjdk-jmh-jmh-generator-annprocess" }
snappy = { module = "org.xerial.snappy:snappy-java", version.ref = "org-xerial-snappy-snappy-java" }
rng-simple = { module = "org.apache.commons:commons-rng-simple", version.ref = "commons-rng" }
rng-sampling = { module = "org.apache.commons:commons-rng-sampling", version.ref = "commons-rng" }
okaeri = { module = "com.github.PowerNukkitX:okaeri-configs", version.ref = "eu-okaeri-core" }

[bundles]
netty = ["netty-raknet", "netty-epoll", "netty-kqueue"]
graalvm-runtime = ["graalvm-js", "graalvm-truffle"]
terminal = ["jline-reader", "jline-terminal", "jline-terminaljna", "terminalconsoleappender"]
logging = ["log4j-slf4j2-impl", "log4j-core"]
test = ["junit", "mockito", "jmh-core", "jmh-generator"]
compress = ["snappy", "lz4", "libdeflate"]
leveldb = ["leveldb", "leveldb-api"]