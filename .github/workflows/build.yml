name: PNX Build

on: [
    pull_request,
    push
]

jobs:
    check-files:
        name: Check repository files
        runs-on: ubuntu-latest
        if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository)
        outputs:
            changed-files: ${{ steps.check-changed-files.outputs.all_changed_and_modified_files }}

        steps:
        - name: Check out repository contents
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Check for file changes
          id: check-changed-files
          uses: tj-actions/changed-files@v44

        - name: output list of changed files
          run: echo ${{ steps.check-changed-files.outputs.all_changed_and_modified_files }}

    build-server:
        name: Build PNX server
        timeout-minutes: 10
        runs-on: ubuntu-latest
        needs: [ check-files ]
        if:
            (github.event_name == 'push' || 
            github.event.pull_request.head.repo.full_name != github.repository) && 
            (contains(needs.check-files.outputs.changed-files, 'src/') ||
            contains(needs.check-files.outputs.changed-files, '.github/workflows') || 
            contains(needs.check-files.outputs.changed-files, 'build.gradle.kts') || 
            (github.event_name == 'push' && 
            (contains(github.event.commits[0].message, '+b') || contains(github.event.commits[0].message, '+u'))
            ))

        steps:
        - uses: actions/checkout@v4
          with:
            repository: ${{ github.event.pull_request.head.repo.full_name }}
            ref: ${{ github.event.pull_request.head.ref }}
            submodules: true

        - uses: actions/setup-java@v4
          with:
            distribution: temurin
            java-version: 21

        - run: chmod +x gradlew

        - name: Setup Gradle
          uses: gradle/gradle-build-action@v3
          with:
            gradle-version: wrapper
            cache-overwrite-existing: true
            build-scan-publish: true
            build-scan-terms-of-service-url: "https://gradle.com/terms-of-service"
            build-scan-terms-of-service-agree: "yes"
            arguments: buildForGithubAction --scan