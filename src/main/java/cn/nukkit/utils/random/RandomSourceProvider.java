package cn.nukkit.utils.random;


public interface RandomSourceProvider {
    static RandomSourceProvider create() {
        return new NukkitRandom();
    }

    static RandomSourceProvider create(long seed) {
        return new NukkitRandom(seed);
    }

    /**
     * Create a new RandomSource using the random long generated by {@link #nextLong()}
     */
    RandomSourceProvider fork();

    /**
     * Generate random integer between {@link Integer#MIN_VALUE} and {@link Integer#MIN_VALUE}
     */
    int nextInt();

    /**
     * Generate random integer between 0 and max
     */
    int nextInt(int max);

    /**
     * Generate a random int in the range min-max,include min and max
     */
    int nextInt(int min, int max);

    int nextBoundedInt(int max);

    /**
     * Generate random long between {@link Long#MIN_VALUE} and {@link Long#MIN_VALUE}
     */
    long nextLong();

    /**
     * Generate random boolean
     */
    boolean nextBoolean();

    /**
     * Next float 0-1
     */
    float nextFloat();

    /**
     * Next double 0-1
     */
    double nextDouble();

    /**
     * Next double -1~1 for Gaussian distribution
     */
    double nextGaussian();

    /**
     * Sets a new seed
     */
    RandomSourceProvider setSeed(long seed);
}
